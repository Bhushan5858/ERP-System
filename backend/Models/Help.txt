1. User Model (User.js)
js
Copy
Edit
const mongoose = require("mongoose");

const userSchema = new mongoose.Schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  password: { type: String, required: true },
  role: { type: String, enum: ["Admin", "Manager", "Developer"], required: true }
}, { timestamps: true });

module.exports = mongoose.model("User", userSchema);





âœ… Step 1: Combined Timesheet Model (TimesheetModel.js)
js
Copy
Edit
import mongoose from 'mongoose';

const TaskSchema = new mongoose.Schema({
  taskId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Task'
  },
  description: String,
  hoursSpent: Number
});

const TimesheetSchema = new mongoose.Schema({
  userId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'User',
    required: true
  },
  date: {
    type: String, // Format: YYYY-MM-DD
    required: true
  },
  clockInTime: String,
  clockOutTime: String,
  workSummery: String,
  totalHours: Number,
  notes: String,    (optional)
  status: {
    type: String,
    enum: ['Pending', 'Approved', 'Rejected'],
    default: 'Pending'
  }
});

TimesheetSchema.index({ userId: 1, date: 1 }, { unique: true });

export default mongoose.model('Timesheet', TimesheetSchema);



4. Leave Model (Leave.js)

const mongoose = require("mongoose");

const leaveSchema = new mongoose.Schema({
  user: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  fromDate: { type: String, required: true },
  toDate: { type: String, required: true },
  type: { type: String, enum: ["Sick", "Paid", "Casual"], required: true },
  status: { type: String, enum: ["Pending", "Approved", "Rejected"], default: "Pending" },
  reason: { type: String }
}, { timestamps: true });

module.exports = mongoose.model("Leave", leaveSchema);




5. Task Model (Task.js)


const mongoose = require("mongoose");

const taskSchema = new mongoose.Schema({
  title: { type: String, required: true },
  description: { type: String },
  assignedTo: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  assignedBy: { type: mongoose.Schema.Types.ObjectId, ref: "User", required: true },
  status: { type: String, enum: ["Pending", "In Progress", "Completed"], default: "Pending" },
  dueDate: { type: String }
}, { timestamps: true });

module.exports = mongoose.model("Task", taskSchema);
